name: Crowdin - Download translations
on:
  workflow_dispatch:

env:
  CROWDIN_API_KEY: ${{ secrets.crowdin_token}}
  CROWDIN_PROJECT_ID: ${{ secrets.crowdin_identifier }}

jobs:
  deploy:
    if: github.repository == 'Cog-Creators/Red-DiscordBot'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        curl https://artifacts.crowdin.com/repo/GPG-KEY-crowdin | sudo apt-key add -
        echo "deb https://artifacts.crowdin.com/repo/deb/ /" | sudo tee -a /etc/apt/sources.list
        sudo apt-get update -qq
        sudo apt-get install -y crowdin
    - name: Download translations
      run: |
        make download_translations
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Automated Crowdin downstream
        title: "[i18n] Automated Crowdin downstream"
        body: |
          This is an automated PR.
          Please ensure that there are no errors or invalid files are in the PR.
        labels: "Automated PR, Category: i18n, Changelog Entry: Skipped"
        branch: "automated/i18n"
        author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
    - name: Close and reopen the PR with different token to trigger CI
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.COGCREATORS_BOT_REPO_SCOPED }}
        script: |
          const pr_number = '${{ steps.cpr.outputs.pull-request-number }}';
          const pr_operation = '${{ steps.cpr.outputs.pull-request-operation }}';
          let sleep_time = 0;

          if (!['created', 'updated'].includes(pr_operation)) {
            console.log('PR was not created as there were no changes.')
            return;
          }

          for (const new_state of ['closed', 'open']) {
            // some sleep time needed to make sure API handles open after close
            if (sleep_time)
              await new Promise(r => setTimeout(r, sleep_time));

            github.issues.update({
              issue_number: pr_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: new_state
            });

            sleep_time = 2000;
          }
